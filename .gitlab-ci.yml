image: condaforge/linux-anvil:latest

stages:
  - build
  - test-basic
  - test-comprehensive
  - deploy

###############################################################################
# Variables
###############################################################################

variables:
  PACKAGE_VERSION: 0.1.45
  SRC_DIR: "${CI_PROJECT_DIR}"
  SCRIPTS_DIR: "${CI_PROJECT_DIR}/_tests"
  TEST_DIR: "${CI_PROJECT_DIR}/_tests"
  MYSQL_INIT_SCRIPT: "$CI_PROJECT_DIR/devtools/gitlab-ci/mysql-init.sql"

###############################################################################
# Build
###############################################################################

.conda_configure: &conda_configure
  before_script:
    # Install yum packages
    - yum update -y -q && yum install -yq rsync.x86_64 wget.x86_64
    # Conda configure
    - ./devtools/gitlab-ci/configure-conda.sh

.build: &build
  stage: build
  script:
    # Build conda packages
    - cd $CI_PROJECT_DIR/devtools/conda-recipe
    - conda build --python $PYTHON_VERSION .
    # Save built packages as artifacts
    - mkdir -p /opt/conda/conda-bld ${CI_PROJECT_DIR}/conda-bld
    - cp -r /opt/conda/conda-bld/{linux-64,noarch} ${CI_PROJECT_DIR}/conda-bld
  artifacts:
    paths:
    - conda-bld

build-py37:
  <<: [*conda_configure, *build]
  variables:
    PYTHON_VERSION: "3.7"

build-py38:
  <<: [*conda_configure, *build]
  variables:
    PYTHON_VERSION: "3.8"

###############################################################################
# Test unittest
###############################################################################

.test-unittest: &test-unittest
  stage: test-basic
  script:
    # Conda install
    - conda install -y -q -c file://${CI_PROJECT_DIR}/conda-bld
      "python=${PYTHON_VERSION}" ${CI_PROJECT_NAME} "foldx=4"
    # Test
    - pip install -q pytest pytest-cov pytest-logging flake8 hypothesis
    - flake8
    - py.test -vv
    - conda env export -f $CI_PROJECT_DIR/environment-py${PYTHON_VERSION/./}.yml
  coverage: /^TOTAL.* (\d+\%)/
  artifacts:
    paths:
    - environment-py${PYTHON_VERSION/./}.yml

test-unittest-py37:
  <<: [*conda_configure, *test-unittest]
  dependencies:
    - build-py37
  variables:
    PYTHON_VERSION: "3.7"

test-unittest-py38:
  <<: [*conda_configure, *test-unittest]
  dependencies:
    - build-py38
  variables:
    PYTHON_VERSION: "3.8"


###############################################################################
# Test SQLite database
###############################################################################

.test-unittest-database: &test-unittest-database
  stage: test-basic
  before_script:
    - echo ${HOME}  # To see where to store SQLite database
    # Configure conda
    - ./devtools/gitlab-ci/configure-conda.sh
    # Install prebuilt package
    - conda install -y -q -c file://${CI_PROJECT_DIR}/conda-bld
      "python=$PYTHON_VERSION" ${CI_PROJECT_NAME}
  script:
    - elaspic database create
    - elaspic database load_basic http://elaspic.kimlab.org/static/download/latest/homo_sapiens_test/
    - elaspic database load_complete http://elaspic.kimlab.org/static/download/latest/homo_sapiens_test/
    - elaspic database delete

test-unittest-sqlite:
  <<: [*test-unittest-database]
  dependencies:
    - build-py38
  variables:
    PYTHON_VERSION: "3.8"
    ELASPIC_DB_STRING: "sqlite:///${HOME}/elaspic.db"

test-unittest-mysql:
  <<: [*test-unittest-database]
  dependencies:
    - build-py38
  services:
    - "mysql:5.7"
  variables:
    PYTHON_VERSION: "3.8"
    MYSQL_DATABASE: "elaspic"
    MYSQL_ROOT_PASSWORD: "rootpass"
    ELASPIC_DB_STRING: "mysql://root:rootpass@mysql/elaspic"

test-unittest-postgresql:
  <<: [*test-unittest-database]
  dependencies:
    - build-py38
  services:
    - "postgres:9.6"
  variables:
    PYTHON_VERSION: "3.8"
    POSTGRES_DB: "elaspic"
    POSTGRES_USER: "root"
    POSTGRES_PASSWORD: "rootpass"
    ELASPIC_DB_STRING: "postgresql://root:rootpass@postgres/elaspic"

###############################################################################
# Test standalone pipeline
###############################################################################

.test-standalone-pipeline: &test-standalone-pipeline
  stage: test-comprehensive
  tags:
    - local  # Don't want to download the blast NR database...
  script:
    # Conda install
    - conda install -y -q -c file://${CI_PROJECT_DIR}/conda-bld
     "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} "foldx=4"
    # Run tests
    # - ./tests/configure_tests.sh
    - pip install -q pytest pytest-cov pytest-logging
    - py.test --quick ./tests/test_standalone_pipeline.py

test-standalone-pipeline:
  <<: [*conda_configure, *test-standalone-pipeline]
  dependencies:
    - build-py38
  variables:
    PYTHON_VERSION: "3.8"
    TEST_NUMBER: "1"

###############################################################################
# Test database pipeline
###############################################################################

.test-database-pipeline: &test-database-pipeline
  stage: test-comprehensive
  tags:
    - local  # Don't want to download the blast NR database...
  script:
    # Conda install
    - conda install -y -q -c file://${CI_PROJECT_DIR}/conda-bld
     "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} "foldx=4"
    # Run tests
    # - ./tests/test_database_pipeline.sh
    - pip install -q pytest pytest-cov pytest-logging
    - py.test --quick ./tests/test_database_pipeline.py

test-database-pipeline:
  <<: [*conda_configure, *test-database-pipeline]
  dependencies:
    - build-py38
  variables:
    PYTHON_VERSION: "3.8"
    # TEST_NUMBER: "1"

# test-database-2:
#   <<: [*conda_configure, *test-database]
#   dependencies:
#     - build-py38
#   variables:
#     PYTHON_VERSION: "3.8"
#     TEST_NUMBER: "2"

###############################################################################
# Pages
###############################################################################

.docs: &docs
  stage: test-basic
  script:
    # Conda install
    - conda install -y -q -c file://${CI_PROJECT_DIR}/conda-bld
      "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} nbconvert ipython ipykernel pandoc
    # Build docs
    - pip install -q sphinx sphinx_rtd_theme recommonmark nbsphinx
    - sphinx-build docs public

test-pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build-py38
  variables:
    PYTHON_VERSION: "3.8"
  except:
    - master
    - tags

pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build-py38
  variables:
    PYTHON_VERSION: "3.8"
  only:
    - master
    - tags
  except:
    - triggers
  artifacts:
    paths:
    - public

###############################################################################
# Deploy
###############################################################################

.deploy: &deploy
  stage: deploy
  script:
    - ./devtools/gitlab-ci/deploy.sh
  only:
    - master
    - tags
  except:
    - triggers

deploy-py37:
  <<: *deploy
  dependencies:
    - build-py37

deploy-py38:
  <<: *deploy
  dependencies:
    - build-py38
