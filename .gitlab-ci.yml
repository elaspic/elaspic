image: condaforge/linux-anvil:latest

stages:
  - build
  - test
  - deploy

# === Variables ===

variables:
  PACKAGE_VERSION: 0.2.0
  SRC_DIR: "${CI_PROJECT_DIR}"
  SCRIPTS_DIR: "${CI_PROJECT_DIR}/_tests"
  TEST_DIR: "${CI_PROJECT_DIR}/_tests"
  MYSQL_INIT_SCRIPT: "$CI_PROJECT_DIR/devtools/gitlab-ci/mysql-init.sql"

# === Build ===

.conda_configure: &conda_configure
  before_script:
    # Install yum packages
    - yum update -y -q && yum install -y -q rsync.x86_64 wget.x86_64
    # Conda configure
    - ./devtools/gitlab-ci/configure-conda.sh

.build: &build
  stage: build
  script:
    # Build conda packages
    - cd $CI_PROJECT_DIR/devtools/conda-recipe
    - conda build --python $PYTHON_VERSION .
    # Save built packages as artifacts
    - mkdir -p /opt/conda/conda-bld
    - cp -r /opt/conda/conda-bld/{linux-64,noarch} $CI_PROJECT_DIR/conda-bld
  artifacts:
    paths:
    - conda-bld

build-py35:
  <<: [*conda_configure, *build]
  variables:
    PYTHON_VERSION: "3.5"

build-py36:
  <<: [*conda_configure, *build]
  variables:
    PYTHON_VERSION: "3.6"

# === Test ===

.test-unittest: &test-unittest
  stage: test
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/ ||
      echo -e "\033[31mNo packages to copy!\e[0m"
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} >/dev/null
    - which elaspic
    - python -c "import elaspic; print(elaspic.__path__)"
    - elaspic train  # not sure why have to do this again?!!
    # Test
    - pip install -q pytest pytest-cov pytest-logging flake8 codecov hypothesis
    - flake8
    - py.test
    - codecov -t $CODECOV_TOKEN
    - conda env export -f $CI_PROJECT_DIR/environment-py${PYTHON_VERSION/./}.yml
  coverage: /^TOTAL.*(\d+\%)/
  artifacts:
    paths:
    - environment-py${PYTHON_VERSION/./}.yml

.test-standalone: &test-standalone
  stage: test
  tags:
    - local
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} >/dev/null
    # Run tests
    # - ./tests/configure_tests.sh
    - pip install -q pytest pytest-cov pytest-logging
    - py.test --quick ./tests/test_standalone_pipeline.py

.test-database: &test-database
  stage: test
  tags:
    - local
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} >/dev/null
    # Start MySQL
    - ./devtools/gitlab-ci/start-database.sh
    - ./devtools/gitlab-ci/fill-database.sh
    # Run tests
    # - ./tests/test_database_pipeline.sh
    - pip install -q pytest pytest-cov pytest-logging
    - py.test --quick ./tests/test_database_pipeline.py
    # Stop MySQL
    - ./devtools/gitlab-ci/stop-database.sh

test-unittest-py35:
  <<: [*conda_configure, *test-unittest]
  dependencies:
    - build-py35
  variables:
    PYTHON_VERSION: "3.5"

test-unittest-py36:
  <<: [*conda_configure, *test-unittest]
  dependencies:
    - build-py36
  variables:
    PYTHON_VERSION: "3.6"

test-standalone:
  <<: [*conda_configure, *test-standalone]
  dependencies:
    - build-py36
  variables:
    PYTHON_VERSION: "3.6"
    TEST_NUMBER: "1"

test-database:
  <<: [*conda_configure, *test-database]
  dependencies:
    - build-py36
  variables:
    PYTHON_VERSION: "3.6"
    # TEST_NUMBER: "1"

# test-database-2:
#   <<: [*conda_configure, *test-database]
#   dependencies:
#     - build-py36
#   variables:
#     PYTHON_VERSION: "3.6"
#     TEST_NUMBER: "2"

# === Pages ===

.docs: &docs
  stage: test
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" $CI_PROJECT_NAME >/dev/null
    # Build docs
    - conda install -yq nbconvert ipython ipykernel pandoc
    - pip install -q sphinx sphinx_rtd_theme recommonmark nbsphinx
    - sphinx-build docs public

test-pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build-py36
  variables:
    PYTHON_VERSION: "3.6"
  except:
    - master
    - tags

pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build-py36
  variables:
    PYTHON_VERSION: "3.6"
  only:
    - master
    - tags
  except:
    - triggers
  artifacts:
    paths:
    - public

# === Deploy ===

.deploy: &deploy
  stage: deploy
  script:
    # Conda configure
    - case "${PACKAGE_VERSION}" in
      *dev*)
        anaconda -t $ANACONDA_TOKEN upload $CI_PROJECT_DIR/conda-bld/linux-64/*.tar.bz2 -u ${CI_PROJECT_NAMESPACE} --label dev --force
      ;;
      *)
        anaconda -t $ANACONDA_TOKEN upload $CI_PROJECT_DIR/conda-bld/linux-64/*.tar.bz2 -u ${CI_PROJECT_NAMESPACE}
      ;;
      esac
  only:
    - master
    - tags
  except:
    - triggers

deploy-py35:
  <<: *deploy
  dependencies:
    - build-py35

deploy-py36:
  <<: *deploy
  dependencies:
    - build-py36
