image: condaforge/linux-anvil:latest

stages:
  - build
  - test
  - deploy

# === Variables ===

variables:
  PACKAGE_VERSION: 0.2.0
  SRC_DIR: "${CI_PROJECT_DIR}"
  SCRIPTS_DIR: "${CI_PROJECT_DIR}/_tests"
  TEST_DIR: "${CI_PROJECT_DIR}/_tests"
  DB_BASEDIR: "/opt/conda/"
  DB_DATADIR: "${TEST_DIR}/db"

.py35: &py35
  PYTHON_VERSION: "3.5"

.py36: &py36
  PYTHON_VERSION: "3.6"

# === Build ===

.conda_configure: &conda_configure
  before_script:
    # Conda configure
    - conda config --append channels bioconda
    - conda config --append channels ostrokach-forge
    - case "${PACKAGE_VERSION}" in
      *dev*)
        conda config --append channels kimlab/label/dev;
        conda config --append channels kimlab;
        conda config --append channels ostrokach/label/dev;
        conda config --append channels ostrokach;
      ;;
      *)
        conda config --append channels kimlab;
        conda config --append channels ostrokach;
      ;;
      esac

.build: &build
  stage: build
  <<: *conda_configure
  script:
    # Build conda packages
    - cd $CI_PROJECT_DIR/devtools/conda-recipe
    - conda build --python $PYTHON_VERSION .
    # Save built packages as artifacts
    - mkdir $CI_PROJECT_DIR/conda-bld
    - cp -r /opt/conda/conda-bld/{linux-64,noarch} $CI_PROJECT_DIR/conda-bld
  artifacts:
    paths:
    - conda-bld

build-py35:
  <<: *build
  variables:
    <<: [*py35]

build-py36:
  <<: *build
  variables:
    <<: [*py36]

# === Test ===

.test: &test
  stage: test
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" $CI_PROJECT_NAME >/dev/null
    # Test
    - pip install -q flake8 pytest pytest-cov codecov hypothesis
    - flake8
    - py.test
    - codecov -t $CODECOV_TOKEN
  coverage: /^TOTAL.* (\d+\%)/

test-py35:
  <<: [*conda_configure, *test]
  dependencies:
    - build-py35
  variables:
    <<: [*py35]

test-py36:
  <<: [*conda_configure, *test]
  dependencies:
    - build-py36
  variables:
    <<: [*py36]

test-standalone:
  stage: test
  dependencies:
    - build-py36
  variables:
    <<: [*py36]
  <<: [*conda_configure]
  script:
    # Install yum packages
    - yum update -y -q && yum install -y -q perl rsync.x86_64 wget.x86_64
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} >/dev/null
    # Run tests
    - ./tests/configure_tests.sh
    - ./tests/test_standalone_pipeline.sh

test-database-1:
  stage: test
  dependencies:
    - build-py36
  variables:
    <<: [*py36]
  <<: [*conda_configure]
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} >/dev/null
    # Start MySQL
    - rm -rf ${DB_DATADIR}
    - mkdir -p ${DB_BASEDIR} ${DB_DATADIR}
    - mysqld --initialize --basedir=${DB_BASEDIR} --datadir=${DB_DATADIR}
    - mysqld --secure-file-priv=/ --user=root --basedir=${DB_BASEDIR} --datadir=${DB_DATADIR}
      --socket=${DB_BASEDIR}/mysql.sock --port=9333 --default_storage_engine=InnoDB
      --init-file=${TEST_DIR}/mysql-init.sql &
    # Run tests
    - ./tests/configure_tests.sh
    - ./tests/configure_database.sh
    - ./tests/test_database_pipeline.sh
    # Cleanup
    - kill %1  # stop mysqld

test-database-2:
  stage: test
  dependencies:
    - build-py36
  variables:
    <<: [*py36]
  <<: [*conda_configure]
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" ${CI_PROJECT_NAME} >/dev/null
    # Run tests
    - ./devtools/travis-ci/configure_tests.sh
    - ./devtools/travis-ci/configure_database.sh
    - ./devtools/travis-ci/test_database_pipeline_2.sh

# === Pages ===

.docs: &docs
  stage: test
  script:
    # Conda install
    - cp -r $CI_PROJECT_DIR/conda-bld/* /opt/conda/conda-bld/
    - conda index /opt/conda/conda-bld/
    - conda install -y -q --use-local "python=$PYTHON_VERSION" $CI_PROJECT_NAME >/dev/null
    # Build docs
    - conda install -yq nbconvert ipython ipykernel pandoc
    - pip install -q sphinx sphinx_rtd_theme recommonmark nbsphinx
    - sphinx-build docs public

test-pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build-py36
  variables:
    <<: [*py36]
  except:
    - master

pages:
  <<: [*conda_configure, *docs]
  dependencies:
    - build-py36
  variables:
    <<: [*py36]
  only:
    - master
  except:
    - triggers
  artifacts:
    paths:
    - public

# === Deploy ===

.deploy: &deploy
  stage: deploy
  script:
    # Conda configure
    - case "${PACKAGE_VERSION}" in
      *dev*)
        anaconda -t $ANACONDA_TOKEN upload $CI_PROJECT_DIR/conda-bld/linux-64/*.tar.bz2 -u ${CI_PROJECT_NAMESPACE} --label dev --force
      ;;
      *)
        anaconda -t $ANACONDA_TOKEN upload $CI_PROJECT_DIR/conda-bld/linux-64/*.tar.bz2 -u ${CI_PROJECT_NAMESPACE}
      ;;
      esac
  only:
    - master
  except:
    - triggers

deploy-py35:
  <<: *deploy
  dependencies:
    - build-py35

deploy-py36:
  <<: *deploy
  dependencies:
    - build-py36
