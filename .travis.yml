sudo: false
language: python
python:
  - '3.5'
services:
  - mysql
install:
  # - wget https://repo.continuum.io/archive/Anaconda3-2.4.0-Linux-x86_64.sh -O anaconda.sh;
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O anaconda.sh;
  - bash anaconda.sh -b -p $HOME/anaconda
  - export PATH="$HOME/anaconda/bin:$PATH"
  - hash -r
  # Add relevant channels and install packages
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels bokeh
  - conda config --add channels ostrokach
  - conda config --add channels salilab
  - conda config --add channels r
  - conda config --add channels bioconda
  - conda info -a
  - conda update -q conda
  - conda install -q conda-build
  - pip install codecov
  # Build elaspic
  - conda build conda/elaspic
before_script:
  # Create a test environment
  - conda create -n _testing elaspic --use-local -y
  - source activate _testing
  - conda install -q -n _testing pytest pytest-cov fake_provean
  - $TRAVIS_BUILD_DIR/scripts/configure_test.sh
  - cd ${TEST_DIR}
  - ls 
script:
  # travis_after_all
  - wget https://raw.github.com/dmakhno/travis_after_all/master/travis_after_all.py
  # Run tests
  - $TEST_DIR/scripts/run_test.sh
after_success:
  - codecov
  # travis_after_all
  - python travis_after_all.py https://api.travis-ci.com
  - export $(cat .to_export_back)
  - |
      if [ "$BUILD_LEADER" = "YES" ]; then
        if [ "$BUILD_AGGREGATE_STATUS" = "others_succeeded" ]; then
          echo "All jobs succeeded! PUBLISHING..."
          # Upload successful build to Anaconda...
          anaconda upload -t $ANACONDA_TOKEN ${HOME}/anaconda/conda-bld/linux-64/elaspic*
        else
          echo "Some jobs failed"
        fi
      fi
after_failure:
  # travis_after_all
  - python travis_after_all.py https://api.travis-ci.com
  - export $(cat .to_export_back)
  - |
      if [ "$BUILD_LEADER" = "YES" ]; then
        if [ "$BUILD_AGGREGATE_STATUS" = "others_failed" ]; then
          echo "All jobs failed"
        else
          echo "Some jobs failed"
        fi
      fi
after_script:
  # travis_after_all
  - echo leader=$BUILD_LEADER status=$BUILD_AGGREGATE_STATUS
  # Cleanup
  - $TEST_DIR/scripts/cleanup_test.sh
env:
  global:
    - TEST_DIR="${HOME}/_testing"
  matrix:
    - TEST_SUITE='local_1'
    - TEST_SUITE='database_1'
    - TEST_SUITE='database_2'
